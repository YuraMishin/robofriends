{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","cards","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","errorInfo","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,mBACrB,gCACI,6BAAKC,IACL,4BAAIC,WCcLI,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAQD,EAAOE,KAAI,SAACC,EAAMC,GAC5B,OACI,cAAC,EAAD,CAEIX,GAAIO,EAAOI,GAAGX,GACdC,KAAMM,EAAOI,GAAGV,KAChBC,MAAOK,EAAOI,GAAGT,OAHZS,MAQjB,OACI,8BACKH,KCFEI,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACE,qBAAKV,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCHI,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,YCiBEC,E,kDAnBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,yCAEJG,KAAKX,MAAMK,a,GAhBCQ,aCgDZC,E,kDA1CX,aAAe,IAAD,8BACV,gBAeJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAfzC,EAAKZ,MAAQ,CACTlB,OAAQ,GACR4B,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBG,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,EAAKZ,SAAS,CAACvB,OAAQmC,S,oBAQnC,WAAU,IAAD,EACyBb,KAAKJ,MAA5BlB,EADF,EACEA,OAAQ4B,EADV,EACUA,YACTQ,EAAiBpC,EAAOqC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAGzD,OAAQvC,EAAOyC,OAGP,sBAAK7C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQoC,WAPlC,6C,GA5BMZ,a,YCDlBkB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.30b0c006.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({id, name, email}) => {\r\n    return (\r\n        <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?size=200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    const cards = robots.map((user, i) => {\r\n        return (\r\n            <Card\r\n                key={i}\r\n                id={robots[i].id}\r\n                name={robots[i].name}\r\n                email={robots[i].email}\r\n            />\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {cards}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='search robots'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oooops!</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundry from \"../components/ErrorBoundry\";\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => {\r\n                this.setState({robots: users})\r\n            });\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n\r\n        return !robots.length ?\r\n            <h1>Loading</h1> :\r\n            (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots} />\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./containers/App\";\nimport './index.css';\nimport 'tachyons'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}